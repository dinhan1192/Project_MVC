@model Project_MVC.Models.Product
@using Project_MVC.Models
@using Microsoft.AspNet.Identity;
@using System.Text;

@{
    ViewBag.Title = "CourseIntroduction";
    Layout = "~/Views/Shared/_LayoutCustomerPage.cshtml";

    var listTopCourse = ViewBag.ListTopCourse as List<Product>;
    var lstLectures = Model.Lectures;
    var lstVideos = new List<LectureVideo>();
    if (lstLectures != null && lstLectures.Count > 0)
    {
        lstVideos = Model.Lectures.OrderBy(s => s.DisplayOrder).FirstOrDefault()
                                        .LectureVideos.ToList();
    };

    var lstImage = Model.ProductImages.OrderByDescending(s => s.CreatedAt);
    var image = new ProductImage();
    if(lstImage != null && lstImage.ToList().Count != 0)
    {
        image = lstImage.FirstOrDefault();
    } else
    {
        image.ImageData = Encoding.ASCII.GetBytes("");
    }

    var teachers = new List<OwnerOfCourse>();
    if(ViewBag.Teachers != null)
    {
        teachers = ViewBag.Teachers as List<OwnerOfCourse>;
    }
}

<section class="site-hero overlay" data-stellar-background-ratio="0.5" style="background-image: url(data:image;base64,@System.Convert.ToBase64String(image.ImageData));">
    <div class="container">
        <div class="row align-items-center site-hero-inner justify-content-center">
            <div class="col-md-12">

                @using (Html.BeginForm("RegisterForCourse", "Products",
                    new { productCode = Model.Code, userName = User.Identity.Name, returnUrlCourseIntro = ViewBag.ReturnUrlCourseIntro },
                    FormMethod.Post, new { @id = "formCreate" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("Name", User.Identity.Name)
                    @Html.Hidden("Code", Model.Code)
                    @Html.Hidden("UserId", User.Identity.GetUserId())
                    <div class="mb-5 element-animate">
                        <div class="row align-items-center">
                            <div class="col-md-8">
                                <h1 class="mb-0">@Model.Name</h1>
                                <p>Dạy bởi @Model.OwnerOfCourse.Name</p>
                                <p class="lead mb-5">@Model.Description</p>
                                <p>
                                    <input type="submit" id="registerCourse" value="Đăng ký học" class="btn btn-primary mr-2"><a id="enterCourse" href="@Url.Action("Index", "Lectures", new { productCode = Model.Code })" class="btn btn-primary mr-2">Vào học ngay</a> <a href="#" class="btn btn-outline-white">Thêm vào danh sách theo dõi</a>
                                </p>
                                @*<a href="@Url.Action("RegisterForCourse", "Products", new { productCode = Model.Code, userName = User.Identity.Name, returnUrlCourseIntro = ViewBag.ReturnUrlCourseIntro })" class="btn btn-primary mr-2">Đăng ký học</a>*@
                            </div>
                            <div class="col-md-4">
                                <img src="data:image;base64,@System.Convert.ToBase64String(image.ImageData)" alt="Image placeholder" class="img-fluid">
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

<section class="site-section bg-light">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-7">
                <h2 class="mb-5">Giới thiệu</h2>
                <div>
                    @if (lstVideos != null && lstVideos.Count > 0)
                    {
                        <video controls id="video" style="width:100%;height:100%">
                            <source src="@Url.Action("Video", "Products",
                                        new { fileId = lstVideos.OrderBy(s => s.DisplayOrder).FirstOrDefault().Id })" type="video/mp4" />
                        </video>
                    }
                </div>
            </div>
        </div>
    </div>
</section>
<!-- END section -->

@Html.Partial("_TopCourses", @listTopCourse)

@Html.Partial("_Teachers", @teachers)

<section class="section-cover bg-dark">
    <div class="container">
        <div class="row justify-content-center align-items-center intro">
            <div class="col-md-7 text-center element-animate">
                <h2>Sign Up And Get a 7-day Free Trial</h2>
                <p class="lead mb-5">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Architecto quidem tempore expedita facere facilis, dolores!</p>
                <p><a href="@Url.Action("Register", "Accounts")" class="btn btn-primary">Đăng nhập và nhận thử 7 ngày</a></p>
            </div>
        </div>
    </div>
</section>

@section scripts{
    <script>
        $(document).ready(function () {
            var code = $.trim($('#Code').val());
            var id = $.trim($('#UserId').val());

            if (id === "") {
                $("#registerCourse").show();
                $("#enterCourse").hide();
                return false;
            }

            var booleanValue = CheckAvailability(code, id);
            if (booleanValue === true) {
                //$.alert({
                //    title: 'Đã mua!',
                //    content: name + ' đã mua khóa học này!',
                //});
                $("#registerCourse").hide();
                $("#enterCourse").show();
            };

            if (booleanValue === false) {
                //$.alert({
                //    title: 'Đã mua!',
                //    content: name + ' đã mua khóa học này!',
                //});
                $("#registerCourse").show();
                $("#enterCourse").hide();
            };
        });
        //$(function () {
        //    $("#formCreate").submit(function () {
        //        var code = $.trim($('#Code').val());
        //        var name = $.trim($('#Name').val());
        //        var id = $.trim($('#UserId').val());
        //        var booleanValue = CheckAvailability(code, id);
        //        if (booleanValue === false) {
        //            $.alert({
        //                title: 'Đã mua!',
        //                content: name + ' đã mua khóa học này!',
        //            });
        //            return false;
        //        }
        //    });
        //});

        function CheckAvailability(productCode, userId) {
            var validation = false;
            $.ajax({
                async: false,
                type: "POST",
                url: "/Products/ValidateUserProductsExist",
                data: '{code: "' + productCode + '", id: "'+ userId +'" }',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    //var message = $("#message");
                    if (response) {
                        //Email available.
                        //message.css("color", "green");
                        //message.html("Email is available");
                        validation = response;
                    }
                    else {
                        //Email not available.
                        //message.css("color", "red");
                        //message.html("Email is NOT available");
                        validation = response;
                    }
                }
            });
            return validation;
        };
    </script>
}