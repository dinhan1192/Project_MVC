@model IEnumerable<Project_MVC.Models.Product>
@using Project_MVC.Models

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var thisPage = ViewBag.Page as ThisPage;
    var url = "/Products/Delete/";
    var urlPopup = "/Products/CreatePopup";

    string ids = "";
    var thisType = "AtView";
}

<h2>Index</h2>

<p>
    @*@Html.ActionLink("Create New", "Create")*@
    <a href="javascript:void(0);" class="anchorDetail" data-parameter="@ids" id="addItem-@thisType" name="addItemName" data-type="@thisType" data-urlPopup="@urlPopup">Create New</a>
</p>

@*<div id='myModal' class='modal'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>*@

<div id='myModal' class="modal fade" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <div id='myModalContent'></div>
            </div>
        </div>
    </div>
</div>

@using (Html.BeginForm("Index", "Products", FormMethod.Get))
{
    <p>
        Find by Product Name or Code: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ProductCategory.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Code)
        </th>
        <th>
            @Html.ActionLink("Product Name", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Instructor)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.ActionLink("Created At", "Index", new { sortOrder = ViewBag.DateSortParm })
        </th>
        <th>
            Product Images
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductCategory.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Instructor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @foreach (var image in item.ProductImages)
                {
                    <img src="data:image;base64,@System.Convert.ToBase64String(image.ImageData)" width="80" height="80" />
                }
            </td>

            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Code }) |
                @Html.ActionLink("Details", "Details", new { id = item.Code }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Code },
              new { @class = "btn btn-danger btn-delete-notify", @id = "delete-" + item.Code, data_request_url = @url })
            </td>
        </tr>
    }
</table>

@Html.Partial("_Paginate", thisPage)


@Html.AntiForgeryToken()
@section scripts{
    @Scripts.Render("~/bundles/custom");
}
