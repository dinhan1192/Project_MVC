@model IEnumerable<Project_MVC.Models.Product>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    int currentPage = (int)ViewBag.currentPage;
    int previousPage = currentPage - 1;
    int nextPage = currentPage + 1;
    string currentPageInString = Convert.ToString(currentPage);
    string previousPageInString = Convert.ToString(previousPage);
    string nextPageInString = Convert.ToString(nextPage);

    var totalPage = ViewBag.totalPage;

    var url = "/Products/Delete/";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "Products", FormMethod.Get))
{
    <p>
        Find by Product Name or Code: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ProductCategory.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Code)
        </th>
        <th>
            @Html.ActionLink("Product Name", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.ActionLink("Created At", "Index", new { sortOrder = ViewBag.DateSortParm })
        </th>
        <th>
            Product Images
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.ProductCategory.Name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Code)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Price)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Description)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.CreatedAt)
    </td>
    <td>
        @foreach (var image in item.ProductImages)
        {
            <img src="data:image;base64,@System.Convert.ToBase64String(image.ImageData)" width="80" height="80" />
        }
    </td>
    <td>
        @Html.ActionLink("Edit", "Edit", new { id = item.Code }) |
        @Html.ActionLink("Details", "Details", new { id = item.Code }) |
        @Html.ActionLink("Delete", "Delete", new { id = item.Code },
      new { @class = "btn btn-danger btn-delete-notify", @id = "delete-" + item.Code, data_request_url = @url })
    </td>
</tr>
    }

</table>

<div>
    Page @currentPage of @totalPage
</div>

<nav aria-label="Page navigation example">
    <ul class="pagination">
        @if (currentPage > 1)
        {
            <li class="page-item">
                @Html.ActionLink("First", "Index", new { page = 1 })
            </li>
            <li class="page-item">
                @Html.ActionLink("Previous", "Index", new { page = currentPage - 1 })
            </li>
            <li class="page-item">
                @Html.ActionLink(previousPageInString, "Index", new { page = currentPage - 1 })
            </li>
        }
        <li class="page-item">
            @*<a class="page-link" href="@Url.Content(~/Index?page = @currentPage)">@currentPage</a>*@
            @Html.ActionLink(currentPageInString, "Index", new { page = currentPage })
        </li>
        @if (currentPage < totalPage)
        {
            <li class="page-item">
                @Html.ActionLink(nextPageInString, "Index", new { page = currentPage + 1 })
            </li>
            <li class="page-item">
                @Html.ActionLink("Next", "Index", new { page = currentPage + 1 })
            </li>
            <li class="page-item">
                @Html.ActionLink("Final", "Index", new { page = totalPage })
            </li>
        }
    </ul>
</nav>

@Html.AntiForgeryToken()
@section scripts{
    @Scripts.Render("~/bundles/custom");
}
