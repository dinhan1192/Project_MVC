@model Project_MVC.Models.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var ownerOfCourse = "Owner";
    var productCategory = "Category";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Products", FormMethod.Post, new
{ enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Product</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Code)

    <div class="form-group">
        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OwnerOfCourseNameAndCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.OwnerOfCourseNameAndCode, new { @class = "form-control typeahead", @id = "AutoComplete", Name = "AutoComplete", data_provide = "typeahead", data_request_url = "/Products/GetListOwnerOfCourses", data_type = ownerOfCourse })
            @*<input id="ProductCategoryId" type="text" name="Autocomplete" value="" class="form-control typeahead" data-provide="typeahead" />*@
            @*<input type="hidden" name="ProductCategoryId" id="hidProductCategoryId" />*@
            @Html.HiddenFor(model => model.OwnerOfCourseCode, new { @id = "hidCode" + ownerOfCourse })
            @Html.ValidationMessageFor(model => model.OwnerOfCourseNameAndCode, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.NumberOfLeture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberOfLeture, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfLeture, "", new { @class = "text-danger" })
            </div>
            <a href="javascript:void(0);" class="addLecture" id="addLecture" data-id="@Model.Code" data-parameter="@numberOfLecture" data-oldLecture="@Model.NumberOfLeture" data-type="@thisType" >Save Number of Lecture</a>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductCategoryNameAndCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.ProductCategoryNameAndCode, new { @class = "form-control typeahead", @id = "AutoComplete", Name = "AutoComplete", data_provide = "typeahead", data_request_url = "/Products/GetListProductCategories", data_type = productCategory})
            @*<input id="ProductCategoryId" type="text" name="Autocomplete" value="" class="form-control typeahead" data-provide="typeahead" />*@
            @*<input type="hidden" name="ProductCategoryId" id="hidProductCategoryId" />*@
            @Html.HiddenFor(model => model.ProductCategoryCode, new { @id = "hidCode" + productCategory })
            @Html.ValidationMessageFor(model => model.ProductCategoryNameAndCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Product Image", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type='file' multiple id='fileUpload' name="images" accept="image/*" />
            @*@Html.TextBoxFor(model => model.ProductImageFile, null, new { htmlAttributes = new {  type="file", @class="input-file" } })*@
            @*@Html.ValidationMessageFor(model => model.ProductImageFile, "", new { @class = "text-danger" })*@
        </div>
    </div>

    @*@Html.Partial("_Lectures", Model)*@
    @*<table class="table">
            <tr>
                @for (var i = 1; i <= Model.NumberOfLeture; i++)
                {
                    <th>
                        Lecture @i:
                    </th>
                }
            </tr>

            @foreach (var item in Model.Lectures)
            {
                <tr>
                    <td>
                        Add Lecture
                    </td>
                </tr>
            }
        </table>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-w-m btn-primary" name="ActionName" value="Save">Save</button>
            <button type="submit" class="btn btn-w-m btn-primary" name="ActionName" value="AddLecture">Add Lecture</button>
        </div>
    </div>
</div>
}

@Html.Partial("_Lectures", Model.Lectures)

<div class="col-md-offset-2 col-md-10">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-info" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/custom")
    @*<script type="text/javascript">
        $('#NumberOfLeture').change(function(){
            var value = $(this).val();
            document.getElementById("addLecture").setAttribute("data-parameter", value);
        });
        </script>*@
    @*<script>
            var TeamDetailPostBackURL = '/Products/EditNumberOfLecture';
            //console.log("1111");
            $(".addLecture").click(function () {
                debugger;
                //console.log("890")
                // do AJAX and store tree structure to a PHP array
                //(to be saved later in database)
                //debugger;
                var $buttonClicked = $(this);
                var id = $buttonClicked.attr('data-id');
                var parameter = $buttonClicked.attr('data-parameter');
                var oldLecture = $buttonClicked.attr('data-oldLecture');
                if (parameter === oldLecture) {
                    alert("Chưa thay đổi số bài giảng")
                }
                //var name = document.getElementsByName("addItemName")[0].getAttribute("data-parameter");
                //console.log(name);
                //console.log(id);
                $.ajax({
                    type: 'POST',
                    url: TeamDetailPostBackURL,
                    data: { "id": id, "numberOfLectures": parameter },
                    success: (
                        alert("Successful save number of lectures!")
                    ),
                    error: function (req, status, error) { }
                });

                //var setValues = document.getElementById("addItem").setAttribute('data-parameter', "")
            });
        </script>*@
}
